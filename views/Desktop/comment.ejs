<html>
<head></head>
<body>
    <div id="modal" style="display:none;top:100px;width:500px;position:absolute;margin:auto;">
      <h1 id="word"></h1>
      <textarea id="comment"></textarea>
      <input type="button" onclick="saveComment();">
    </div>
<textarea id="input"></textarea>
<input type="button" value="parse" onclick="parseInput();">
<div id="output"></div>
<script>
    var openid, uid;
    function parseInput() {
        var text = document.getElementById('input').value;
        var words = text.split(' ');
        var html = '';
        var url = "/comment/init";
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
            if (this.readyState === 4 && this.status === 200) {
                uid = JSON.parse(this.responseText).uid;
                //document.getElementById("demo").innerHTML = this.responseText;
            }
        };
        xhttp.open("POST", url, true);
        xhttp.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
        xhttp.send(JSON.stringify({"words": words}));
        for (let i=0; i< words.length;i++) {
            html += '<span style="padding: 0 5px;" onclick="addComment(' + i + ')" id="' + i + '">' + words[i] + '</span>';
        }
        document.getElementById('output').innerHTML = html;
    }
    function addComment(id) {
        var url = "/comment/";
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
            if (this.readyState === 4 && this.status === 200) {
                //$('#modal').css('display', 'block');
                let res = JSON.parse(this.responseText);
                document.getElementById('modal').style.display = 'block';
                //$('#word').html(words[id]);
                document.getElementById('word').innerHTML = res.word;
                document.getElementById('comment').value = res.comment;
                openid = id;
            }
        };
        xhttp.open("GET", url + "?id=" + id + "&uid=" + uid, true);
        xhttp.send();
    }
    function saveComment() {
        let url = "/comment/save";
        let xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
            if (this.readyState === 4 && this.status === 200) {
                //document.getElementById("demo").innerHTML = this.responseText;
            }
        };
        xhttp.open("POST", url, true);
        xhttp.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
        xhttp.send(JSON.stringify({"uid": uid, "id": openid, "comment": document.getElementById('comment').value}));
        document.getElementById('modal').style.display = 'none';
    }
	
	function sortTables() {
	"use strict";
	var tableSort = function (tab) {
			var titel = tab.getElementsByTagName("thead")[0].getElementsByTagName("tr")[
				0].getElementsByTagName("th");
			var tbdy = tab.getElementsByTagName("tbody")[0];
			var tz = tbdy.rows;
			var nzeilen = tz.length;
			if (nzeilen == 0) return;
			var nspalten = tz[0].cells.length;
			var arr = new Array(nzeilen);
			var sortiert = -1;
			var sorttype = new Array(nspalten);
			var sortbuttonStyle = document.createElement('style'); 
			sortbuttonStyle.innerText =
				'.sortbutton { width:100%; height:100%; border: none; background-color: transparent; font: inherit; color: inherit; text-align: inherit; padding: 0; cursor: pointer; } .sortbutton::-moz-focus-inner { margin: -1px; border-width: 1px; padding: 0; }';
			document.head.appendChild(sortbuttonStyle);
			var initTableHead = function (sp) { 
				var b = document.createElement("button");
				b.type = "button";
				b.className = "sortbutton";
				b.innerHTML = titel[sp].innerHTML;
				b.addEventListener("click", function () {
					tsort(sp);
				}, false);
				titel[sp].innerHTML = "";
				titel[sp].appendChild(b);
			}
			var getData = function (ele, s) {
					var val = ele.textContent; 
					if (!isNaN(val) && val.search(/[0-9]/) != -1) return val;
					var n = val.replace(",", ".");
					if (!isNaN(n) && n.search(/[0-9]/) != -1) return n;
					sorttype[s] = "s"; 
					return val;
				}
			var vglFkt_s = function (a, b) {
					var as = a[sortiert],
						bs = b[sortiert];
					if (as > bs) return 1;
					else return -1;
				} 
			var vglFkt_n = function (a, b) {
					return parseFloat(a[sortiert]) - parseFloat(b[sortiert]);
				} 
			var tsort = function (sp) {
					if (sp == sortiert) arr.reverse(); 
					else { 
						sortiert = sp;
						if (sorttype[sp] == "n") arr.sort(vglFkt_n);
						else arr.sort(vglFkt_s);
					}
					for (var z = 0; z < nzeilen; z++) tbdy.appendChild(arr[z][nspalten]); // Sortierte Daten zurÃ¼ckschreiben
				} 
				
			for (var i = 0; i < titel.length; i++) initTableHead(i);
			
			for (var s = 0; s < nspalten; s++) sorttype[s] = "n";
			
			for (var z = 0; z < nzeilen; z++) {
				var zelle = tz[z].getElementsByTagName("td"); 
				arr[z] = new Array(nspalten + 1);
				arr[z][nspalten] = tz[z];
				for (var s = 0; s < nspalten; s++) {
					var zi = getData(zelle[s], s);
					arr[z][s] = zi;
					
				}
			}
		} 
	var initTableSort = function () {
			var sort_Table = document.querySelectorAll("table.sortierbar");
			for (var i = 0; i < sort_Table.length; i++) new tableSort(sort_Table[i]);
		} 
	if (window.addEventListener) window.addEventListener("DOMContentLoaded",
		initTableSort, false); 
})();

	
	
</script>
</body>
</html>

